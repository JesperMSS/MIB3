/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mib1;
import java.util.logging.Level;
import java.util.logging.Logger;
import oru.inf.InfDB;
import oru.inf.InfException;
/**
 *
 * @author jespersundin
 */
public class AgentSökAlien extends javax.swing.JFrame {
 private static InfDB idb;
    /**
     * Creates new form AgentSökAlienNY
     */
    public AgentSökAlien(InfDB idb) {
        initComponents();
        this.idb = idb;
        specialVärdeLBL.setVisible(false);
        RasSpecLBL.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputNamn = new javax.swing.JTextField();
        dateLBL = new javax.swing.JLabel();
        okBTN = new javax.swing.JButton();
        txtHead = new javax.swing.JLabel();
        chefLBL = new javax.swing.JLabel();
        incomingID = new javax.swing.JLabel();
        idLBL = new javax.swing.JLabel();
        txtDate = new javax.swing.JLabel();
        platsLBL = new javax.swing.JLabel();
        txtChef = new javax.swing.JLabel();
        passwordLBL = new javax.swing.JLabel();
        txtID = new javax.swing.JLabel();
        phoneLBL = new javax.swing.JLabel();
        txtPlats = new javax.swing.JLabel();
        rasLBL = new javax.swing.JLabel();
        txtPassword = new javax.swing.JLabel();
        specialVärdeLBL = new javax.swing.JLabel();
        txtPhone = new javax.swing.JLabel();
        txtRas = new javax.swing.JLabel();
        txtNamn = new javax.swing.JLabel();
        RasSpecLBL = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        okBTN.setText("OK");
        okBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBTNActionPerformed(evt);
            }
        });

        txtHead.setText("Sök efter Alien:");

        txtDate.setText("Registreringsdatum:");

        txtChef.setText("Ansvarig Agent:");

        txtID.setText("Alien-ID:");

        txtPlats.setText("Plats:");

        txtPassword.setText("Lösenord:");

        txtPhone.setText("Telefonnummer:");

        txtRas.setText("Ras:");

        txtNamn.setText("Ange namn på Alien:");

        RasSpecLBL.setText("RasSpec:");

        jButton1.setText("Tillbaka");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtID)
                                .addComponent(txtPassword)
                                .addComponent(dateLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(idLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(passwordLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtRas)
                            .addComponent(rasLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtChef, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtPlats)
                            .addComponent(RasSpecLBL)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(platsLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(phoneLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(specialVärdeLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(chefLBL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPhone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(127, 127, 127))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtHead)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(incomingID, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNamn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(okBTN)))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtHead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(incomingID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNamn)
                    .addComponent(inputNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPassword)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passwordLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtChef)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chefLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtPlats)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(platsLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtPhone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(phoneLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtRas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rasLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(RasSpecLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(specialVärdeLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBTNActionPerformed
         // Validering som kontrollerar att fältet inte är tomt.
        if (valideringsklass.tomtFalt(inputNamn)) {
            try {
                String Namn = inputNamn.getText();
              //  int ID = Integer.parseInt(inputID.getText());
              
              
                String ID = idb.fetchSingle("SELECT ALIEN_ID from Alien where NAMN=" + "'" + Namn+"'");
                String Date = idb.fetchSingle("SELECT REGISTRERINGSDATUM from Alien where NAMN=" + "'" + Namn+"'");
                String Chef = idb.fetchSingle("SELECT ANSVARIG_AGENT from Alien where NAMN=" + "'" + Namn+"'");
                String Password = idb.fetchSingle("SELECT LOSENORD from Alien where NAMN=" + "'" + Namn+"'");
                String Phone = idb.fetchSingle("SELECT TELEFON from Alien where NAMN=" + "'" + Namn+"'");
                String Plats = idb.fetchSingle("SELECT PLATS from Alien where NAMN=" + "'" + Namn+"'");

                // Sätter datan som hämtats 
                dateLBL.setText(Date);
                chefLBL.setText(Chef);
               idLBL.setText(ID);
                platsLBL.setText(Plats);
                phoneLBL.setText(Phone);
                passwordLBL.setText(Password);

                String ras;
                String antalBoogies = idb.fetchSingle("SELECT ANTAL_BOOGIES from BOGLODITE where ALIEN_ID=" + ID);
                String antalArmar = idb.fetchSingle("SELECT ANTAL_ARMAR from SQUID where ALIEN_ID=" + ID);

                if (antalBoogies != null) {
                    specialVärdeLBL.setVisible(true);
                    RasSpecLBL.setVisible(true);
                    ras = "Boglodite";
                    RasSpecLBL.setText("Antal boogies:");
                    specialVärdeLBL.setText(antalBoogies);
                } else if (antalArmar != null) {
                    specialVärdeLBL.setVisible(true);
                    RasSpecLBL.setVisible(true);
                    ras = "Squid";
                    RasSpecLBL.setText("Antal armar:");
                    specialVärdeLBL.setText(antalArmar);
                } else {
                    ras = "Worm";
                    specialVärdeLBL.setVisible(false);
                    RasSpecLBL.setVisible(false);
                }
                rasLBL.setText(ras);

            } catch (InfException ex) {
                Logger.getLogger(AgentSökAlien.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_okBTNActionPerformed
} 
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
          AgentInloggad tbx = new AgentInloggad(idb);
        tbx.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgentSökAlien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgentSökAlien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgentSökAlien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgentSökAlien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgentSökAlien(idb).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel RasSpecLBL;
    private javax.swing.JLabel chefLBL;
    private javax.swing.JLabel dateLBL;
    private javax.swing.JLabel idLBL;
    private javax.swing.JLabel incomingID;
    private javax.swing.JTextField inputNamn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton okBTN;
    private javax.swing.JLabel passwordLBL;
    private javax.swing.JLabel phoneLBL;
    private javax.swing.JLabel platsLBL;
    private javax.swing.JLabel rasLBL;
    private javax.swing.JLabel specialVärdeLBL;
    private javax.swing.JLabel txtChef;
    private javax.swing.JLabel txtDate;
    private javax.swing.JLabel txtHead;
    private javax.swing.JLabel txtID;
    private javax.swing.JLabel txtNamn;
    private javax.swing.JLabel txtPassword;
    private javax.swing.JLabel txtPhone;
    private javax.swing.JLabel txtPlats;
    private javax.swing.JLabel txtRas;
    // End of variables declaration//GEN-END:variables
}
